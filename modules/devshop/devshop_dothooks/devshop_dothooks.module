<?php

require_once 'vendor/autoload.php';
use Symfony\Component\Yaml\Parser;
use Symfony\Component\Process\Process;
use Symfony\Component\Process\Exception\ProcessFailedException;

/**
 * Implements hook_nodeapi_site_load()
 *
 * For site nodes, look for a .hooks file in the git repo root.
 */
function devshop_dothooks_devshop_environment_alter(&$environment) {
    $yaml = new Parser();
    $hooks_path = $environment->repo_root . '/.hooks';
    $environment->dothooks = $yaml->parse(file_get_contents($hooks_path));
}

/**
 * Runs a hook for a task.
 * @param $hook
 * @param $task
 */
function devshop_dothooks_run_hook($hook, $environment) {

  if (empty($environment->dothooks[$hook])) {
    drush_log('[.hooks] Hook not found: ' . $hook, 'info');
    return;
  }

  drush_log('[.hooks] Hook found: ' . $hook, 'ok');
  drush_log('[.hooks] ' .$environment->dothooks['verify'], 'ok');

  $process = new Process($environment->dothooks['verify']);
  $process->run(function ($type, $buffer) {
    if (Process::ERR === $type) {
      drush_log($buffer, 'dothooks_error');
      drush_log('[.hooks] Hook failed: ' . $buffer, 'error');
    } else {
      drush_log($buffer, 'dothooks_ok');
    }
  });
}

/**
 * Implementation of hook_post_hosting_TASK_TYPE_task()
 * for Verify tasks.
 *
 * Runs the "verify" dotHook
 */
function devshop_dothooks_post_hosting_verify_task($task, $data) {
  devshop_dothooks_run_hook('verify', $task->ref->environment);
}